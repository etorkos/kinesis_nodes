{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Nested template for creating an Auto Scaling Group of Kinesis Consumers",

	"Parameters" : {

		"WebInstanceType" : {
			"Description" : "Type of instance to be used for the Kinesis Consumers Auto Scaling Group",
			"Type" : "String"
		},

		"WebSubnet1a" : {
			"Description" : "Subnet for the Web Servers",
			"Type" : "AWS::EC2::Subnet::Id"
		},

		"WebSubnet1c" : {
			"Description" : "Subnet for the Web Servers",
			"Type" : "AWS::EC2::Subnet::Id"
		},

		"WebSubnet1d" : {
			"Description" : "Subnet for the Web Servers",
			"Type" : "AWS::EC2::Subnet::Id"
		},

		"KinesisConsumerSecurityGroup" : {
			"Description" : "Security Group Id for the Web Servers Auto Scaling Group",
			"Type" : "AWS::EC2::SecurityGroup::Id"
		},

		"KinesisKeyPair" : {
			"Description" : "KeyPair credentials",
			"Type" : "AWS::EC2::KeyPair::KeyName"
		}
	},

	"Mappings" : {
		"AWSInstanceType2Arch" : {
			"t2.micro"  : { "Arch" : "32" },
			"t2.medium" : { "Arch" : "64" },
			"m1.small"  : { "Arch" : "64" },
			"m1.medium" : { "Arch" : "64" },
			"m3.medium" : { "Arch" : "64" },
			"m3.large"  : { "Arch" : "64" }
		},
		"AWSRegionArch2AMI" : {
			"us-east-1" : { "32" : "ami-1ecae776", "64" : "ami-1ecae776" }
		}
	},

	"Resources" : {
		"KinesisCustomerGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"LaunchConfigurationName" : {
					"Ref" : "KinesisConsumerConfiguration"
				},
				"MaxSize" : "3",
				"MinSize" : "1",
				"Tags" : [{
					"Key" : "Name",
					"Value" : "Kinesis-Consumer",
					"PropagateAtLaunch" : "true"
				}],
				"VPCZoneIdentifier" : [ { "Ref" : "WebSubnet1a" }, { "Ref" : "WebSubnet1c" }, { "Ref" : "WebSubnet1d" } ]
			},
			"CreationPolicy" : {
		        "ResourceSignal" : {
		          "Timeout" : "PT15M",
		          "Count"   : "1"
		        }
		    },
		    "UpdatePolicy": {
		        "AutoScalingRollingUpdate": {
		          "MinInstancesInService": "1",
		          "MaxBatchSize": "1",
		          "PauseTime" : "PT15M",
		          "WaitOnResourceSignals": "true"
		        }
		    }
		},

		"KinesisConsumerInstanceProfile" : {
			"Type" : "AWS::IAM::InstanceProfile",
			"Properties" : {
				"Path" : "/",
				"Roles" : [ "KinesisConsumer" ]
			}
		},

		"KinesisConsumerConfiguration" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"IamInstanceProfile" : { "Ref" : "KinesisConsumerInstanceProfile" },
				"ImageId" : { "Fn::FindInMap" : [
					"AWSRegionArch2AMI", 
					{ "Ref" : "AWS::Region"},
					{ "Fn::FindInMap" : [
						"AWSInstanceType2Arch", { "Ref" : "WebInstanceType" }, "Arch"
					]}
				]},
				"InstanceType" : {
					"Ref" : "WebInstanceType"
				},
				"KeyName" : "KinesisCredentials",
				"SecurityGroups" : [ { "Ref" : "KinesisConsumerSecurityGroup" } ],
				"UserData" : { 
					"Fn::Base64" : { "Fn::Join" : ["", [
						"#!/bin/bash\n",
						"yum update -y\n",

						"/opt/aws/bin/cfn-init -v ",
						"--stack ", { "Ref" : "AWS::StackName" },
						" --resource KinesisConsumerConfiguration ",
						"--configsets config_consumer ",
						"--region ", { "Ref" : "AWS::Region" }, "\n",

						"/opt/aws/bin/cfn-signal -e $? ",
						"--stack ", { "Ref" : "AWS::StackName"},
						" --resource KinesisCustomerGroup ",
						"--region ", { "Ref" : "AWS::Region" }, "\n"
					]]}

				}
			},
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets" : {
						"config_consumer" : ["install_nodejs", "install_git"]
					},
					"install_nodejs": {
						"commands" : {
							"01_install_node" : {
								"command" : "yum install -y nodejs npm --enablerepo=epel"
							}
						}
					},
					"install_git": {
						"commands" : {
							"01_install_node" : {
								"command" : "yum install -y git"
							}
						}
					}
				}
			}
		},
		"KinesisCustomerGroupScaleUpPolicy" : {
	    	"Type" : "AWS::AutoScaling::ScalingPolicy",
	      	"Properties" : {
	        	"AdjustmentType" : "ChangeInCapacity",
	        	"AutoScalingGroupName" : { "Ref" : "KinesisCustomerGroup" },
	        	"Cooldown" : "60",
	        	"ScalingAdjustment" : "1"
	      	}
	    },
	    "KinesisCustomerGroupScaleDownPolicy" : {
	      	"Type" : "AWS::AutoScaling::ScalingPolicy",
	      	"Properties" : {
	        	"AdjustmentType" : "ChangeInCapacity",
	        	"AutoScalingGroupName" : { "Ref" : "KinesisCustomerGroup" },
	        	"Cooldown" : "60",
	        	"ScalingAdjustment" : "-1"
	      	}
	    }
	}
}